apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

apply from: '../dependencies.gradle'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.wt.apkinfo"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 11
        versionName "1.1.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //resConfigs "en", "pl", "hi", "hi-rIN",
        vectorDrawables.useSupportLibrary = true

        buildConfigField "long", "APP_BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
    }

    signingConfigs {
        debugKeystore {
            storeFile file("../debug_certificate/debug_cert.jks")
            storePassword "android"
            keyAlias "debug_certificate"
            keyPassword "android"
        }
        releaseKeystore {
            Properties props = new Properties()
            props.load(new FileInputStream("local.properties"))

            storeFile file("../release_certificate/release_certificate.jks")
            keyAlias props.get('SIGN_ALIAS', '')
            storePassword props.get('SING_STORE_PASS', '')
            keyPassword props.get('SIGN_ALIAS_PASS', '')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debugKeystore
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseKeystore
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard/proguard-rules.pro',
                    'proguard/otto.pro',
                    'proguard/retrofit.pro',
                    'proguard/okio.pro',
                    'proguard/crashlytics.pro',
                    'proguard/support_design.pro',
                    'proguard/support_v7.pro',
                    'proguard/picasso.pro',
                    'proguard/android.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "ApkInfo-${variant.buildType.name}-${defaultConfig.versionName}-[${defaultConfig.versionCode}].apk"
                }
            }
        }
    }


}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:' + versions.supportLib
    implementation 'com.android.support:support-v13:' + versions.supportLib
    implementation 'com.android.support:support-v4:' + versions.supportLib
    implementation 'com.android.support:support-annotations:' + versions.supportLib
    implementation 'com.android.support:support-fragment:' + versions.supportLib
    implementation "com.android.support:recyclerview-v7:" + versions.supportLib
    implementation "com.android.support:design:" + versions.supportLib

    implementation 'com.android.installreferrer:installreferrer:' + versions.installreferrer
    implementation 'com.squareup.picasso:picasso:' + versions.picasso

    implementation 'android.arch.lifecycle:runtime:' + versions.lifecycle
    implementation 'android.arch.lifecycle:extensions:' + versions.lifecycle
    annotationProcessor 'android.arch.lifecycle:compiler:' + versions.lifecycle

    implementation 'com.google.firebase:firebase-core:' + versions.firebase.core
    implementation 'com.google.firebase:firebase-perf:' + versions.firebase.performance

    implementation 'com.jakewharton:butterknife:' + versions.butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + versions.butterknife

    implementation 'com.github.Hivedi:Console:' + versions.console
    implementation 'com.github.Hivedi:ErrorReportAdapter:' + versions.era

    implementation('com.crashlytics.sdk.android:crashlytics:' + versions.crashlytics + '@aar') { transitive = true }
    implementation('com.crashlytics.sdk.android:answers:' + versions.answers + '@aar') { transitive = true }
    implementation 'com.github.anrwatchdog:anrwatchdog:' + versions.anrwatchdog
    implementation 'com.afollestad.material-dialogs:core:' + versions.materialDialogs
}

apply plugin: 'com.google.gms.google-services'