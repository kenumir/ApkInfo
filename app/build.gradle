apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.wt.apkinfo"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 15
        versionName "1.2.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        buildConfigField "long", "APP_BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debugKeystore {
            storeFile file("../debug_certificate/debug_cert.jks")
            storePassword "android"
            keyAlias "debug_certificate"
            keyPassword "android"
        }
        releaseKeystore {
            Properties props = new Properties()
            props.load(new FileInputStream("local.properties"))

            storeFile file("../release_certificate/release_certificate.jks")
            keyAlias props.get('SIGN_ALIAS', '')
            storePassword props.get('SING_STORE_PASS', '')
            keyPassword props.get('SIGN_ALIAS_PASS', '')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debugKeystore
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseKeystore
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard/proguard-rules.pro',
                    'proguard/otto.pro',
                    'proguard/retrofit.pro',
                    'proguard/okio.pro',
                    'proguard/crashlytics.pro',
                    'proguard/support_design.pro',
                    'proguard/support_v7.pro',
                    'proguard/picasso.pro',
                    'proguard/android.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "ApkInfo-${variant.buildType.name}-${defaultConfig.versionName}-[${defaultConfig.versionCode}].apk"
                }
            }
        }
    }


}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libraries.androidx.appcompat
    implementation libraries.androidx.recyclerview
    implementation libraries.androidx.vectordrawable
    implementation libraries.androidx.lifecycle.extensions
    implementation libraries.androidx.lifecycle.livedata
    implementation libraries.androidx.lifecycle.runtime
    implementation libraries.androidx.lifecycle.java8
    implementation libraries.androidx.lifecycle.viewmodel

    implementation libraries.android.installreferrer

    implementation libraries.google.material
    implementation libraries.google.firebase.core
    implementation libraries.google.firebase.perf

    implementation libraries.squareup.picasso
    //implementation libraries.butterknife
    //annotationProcessor libraries.butterknifeCompiler

    implementation libraries.hivedi.console
    implementation libraries.hivedi.era

    implementation libraries.materialDialogs
    //implementation libraries.anrwatchdog
    implementation libraries.crashlytics

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
}

apply plugin: 'com.google.gms.google-services'