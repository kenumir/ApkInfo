buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.wt.apkinfo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resConfigs "en", "pl"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "long", "APP_BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
    }

    signingConfigs {
        debugKeystore {
            storeFile file("../debug_certificate/debug_cert.jks")
            storePassword "android"
            keyAlias "debug_certificate"
            keyPassword "android"
        }
        releaseKeystore {
            Properties props = new Properties()
            props.load(new FileInputStream("local.properties"))

            storeFile file("../release_certificate/release_certificate.jks")
            keyAlias props.get('SIGN_ALIAS', '')
            storePassword props.get('SING_STORE_PASS', '')
            keyPassword props.get('SIGN_ALIAS_PASS', '')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debugKeystore
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseKeystore
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard/proguard-rules.pro',
                    'proguard/otto.pro',
                    'proguard/retrofit.pro',
                    'proguard/okio.pro',
                    'proguard/crashlytics.pro',
                    'proguard/support_design.pro',
                    'proguard/support_v7.pro',
                    'proguard/picasso.pro',
                    'proguard/android.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //noinspection GroovyAssignabilityCheck
                    output.outputFile = new File(output.outputFile.parent, "ApkInfo-" + variant.buildType.name + "-" + defaultConfig.versionName + " [" + defaultConfig.versionCode + "].apk")
                }
            }
        }
    }


}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile "com.android.support:recyclerview-v7:26.1.0"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'android.arch.lifecycle:runtime:1.0.0-alpha9-1'
    compile 'android.arch.lifecycle:extensions:1.0.0-alpha9-1'
    compile 'com.android.support:support-v4:26.1.0'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0-alpha9-1'

    compile "com.google.firebase:firebase-core:11.2.2"
    compile "com.google.firebase:firebase-perf:11.2.2"

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    compile 'com.github.Hivedi:Console:1.0.3'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.13@aar') {
        transitive = true;
    }
    compile 'com.github.anrwatchdog:anrwatchdog:1.3.0'
}

apply plugin: 'com.google.gms.google-services'